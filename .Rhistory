df$monthday <= 10 ~ 'early_month',
df$monthday <= 20 ~ 'mid_month',
TRUE ~ 'end_month'
)
df$weekend = case_when(
df$weekday == '6' | df$weekday == '7' ~ '1',
TRUE ~ '0'
)
df$weekend
x <- c(1:10)
x %>% sum
# square root of x
sqrt(x)
x %>% sqrt
sum(sqrt(x))
x %>% sqrt %>% sum
log(sum(sqrt(x)))
x %>% sqrt %>% sum %>% log
# log base 2 of 16
log(16, 2)
16 %>% log(2)
df %>%
select(totalTestsViral)
df %>%
group_by(weekday) %>%
summarise(mean(positiveIncrease))
df %>%
group_by(month) %>%
summarise(median(positiveIncrease))
df %>%
group_by(month2) %>%
summarise(mean(positiveIncrease))
df %>%
group_by(weekend) %>%
summarize(median(positiveIncrease))
```
df %>%
filter(month >= 9 & month < 11, year(df$date) == "2020") %>%
group_by(month2) %>%
summarise(median(death))
df %>%
filter(month >= 9 & month < 11, year(df$date) == "2020") %>%
group_by(month2) %>%
summarise(median(death))
df$weekdayFlag <- case_when(df$weekdays < 6 ~ 1, TRUE ~ 0)
df %>%
filter(month < 9 & month => 5, year(df$date) == "2020") %>%
df %>%
filter(month < 9 & month > 4, year(df$date) == "2020") %>%
group_by(month2) %>%
summarise(median(hospitalizations))
df %>%
filter(month < 9 & month > 4, year(df$date) == "2020") %>%
group_by(month2) %>%
summarise(median(hospitalized))
df %>%
filter(month < 9 & month > 4, year(df$date) == "2020") %>%
group_by(weekend) %>%
summarise(mean(hospitalized))
df %>%
filter(month < 9 & month > 4, year(df$date) == "2020") %>%
group_by(weekend) %>%
summarise(mean(hospitalized,na.rm=TRUE))
df
str(df)
df$state
14. Find the median cases by weekdays in Rhode Island in 2021
df$RI_flag <-- case_when(df$state == "RI" ~ '1',
TRUE ~ '0'
df %>%
df$RI_flag <-- case_when(df$state == "RI" ~ '1',
TRUE ~ '0')
df$RI_flag <-- case_when(df$state == "RI" ~ 1,
TRUE ~ 0)
df$RI_flag
df$RI_flag <-- case_when(df$state == "RI" ~ '1',
TRUE ~ '0')
df %>%
filter(weekend == '0', RI_flag == 1) %>%
group_by(weekdays) %>%
summarise(median(cases, na.rm = TRUE))
str(df)
df1 = read_csv("C:/Users/student/OneDrive - Bryant University/Desktop/Stats w R/MATH421/Data/all-states-history.csv")
df1$RI_flag <-- case_when(df$state == "RI" ~ 1,
TRUE ~ 0)
df1 %>%
filter(weekend == '0', RI_flag == 1) %>%
group_by(weekdays) %>%
summarise(median(cases, na.rm = TRUE))
df1
str(df1)
df1 = read_csv('WHO-COVID-19-global-data.csv')
df1 = read_csv("C:/Users/student/OneDrive - Bryant University/Desktop/Stats w R/MATH421/Data/WHO-COVID-19-global-data.csv")
df1
str(df1)
df1 = read.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv')
str(df1)
df1 %>%
filter(weekend == '0', RI_flag == 1) %>%
group_by(weekdays) %>%
summarise(median(cases, na.rm = TRUE))
df1 %>%
filter(weekend == '0', RI_flag == 1) %>%
group_by(weekday) %>%
summarise(median(cases, na.rm = TRUE))
df1$weekday
df1 = read.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv')
df1$RI_flag <-- case_when(df1$state == "Rhode Island" ~ 1,
TRUE ~ 0)
df1$weekday = wday(df1$date)
df1$weekend = case_when(
df1$weekday == '6' | df1$weekday == '7' ~ '1',
TRUE ~ '0'
)
df1 %>%
filter(weekend == '0', RI_flag == 1) %>%
group_by(weekday) %>%
summarise(median(cases, na.rm = TRUE))
df1 %>%
filter(weekend == '0', RI_flag == 1) %>%
group_by(weekday) %>%
summarise(median(cases, na.rm = TRUE))
df1$month = month(df1$date)
df1$month
df$month
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyverse')
library(tidyverse)
library(lubridate)
df = read_csv("C:/Users/student/OneDrive - Bryant University/Desktop/Stats w R/MATH421/Data/all-states-history.csv")
library(lubridate)
df$month = month(df$date)
# day of the week
df$weekday = wday(df$date)
# day of the month
df$monthday <- mday(df$date)
df$daily_death <- case_when(
df$deathIncrease <3 ~ 'low',
df$deathIncrease <=14 ~ 'medium',
TRUE ~ 'high'
)
df$month2 <- case_when(
df$monthday <= 10 ~ 'early_month',
df$monthday <= 20 ~ 'mid_month',
TRUE ~ 'end_month'
)
df$weekend = case_when(
df$weekday == '6' | df$weekday == '7' ~ '1',
TRUE ~ '0'
)
df %>%
select(totalTestsViral)
x <- c(1:10)
x %>% sum
# square root of x
sqrt(x)
x %>% sqrt
sum(sqrt(x))
x %>% sqrt %>% sum
log(sum(sqrt(x)))
x %>% sqrt %>% sum %>% log
# log base 2 of 16
log(16, 2)
16 %>% log(2)
df %>%
group_by(weekday) %>%
summarise(mean(positiveIncrease))
df %>%
group_by(month) %>%
summarise(median(positiveIncrease))
df %>%
group_by(month2) %>%
summarise(mean(positiveIncrease))
df %>%
group_by(weekend) %>%
summarize(median(positiveIncrease))
```
install.packages("tidyverse")
df1 = read.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv')
df1$RI_flag <-- case_when(df1$state == "Rhode Island" ~ 1,
TRUE ~ 0)
df1$weekday = wday(df1$date)
df1$weekend = case_when(
df1$weekday == '6' | df1$weekday == '7' ~ '1',
TRUE ~ '0'
)
df1 %>%
filter(weekend == '0', RI_flag == 1) %>%
group_by(weekday) %>%
summarise(median(cases, na.rm = TRUE))
df1$month = month(df1$date)
df1$month
df1$month = month(df1$date)
df1 %>%
filter(year(date) == "2021", RI_flag == 1, month > 4 & month < 10) %>%
group_by(month) %>%
summarise(median(cases, na.rm = TRUE))
df1 = read.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv')
df1$RI_flag <-- case_when(df1$state == "Rhode Island" ~ 1,
TRUE ~ 0)
df1$weekday = wday(df1$date)
df1$weekend = case_when(
df1$weekday == '6' | df1$weekday == '7' ~ '1',
TRUE ~ '0'
)
df1 %>%
filter(weekend == '0', RI_flag == 1) %>%
group_by(weekday) %>%
summarise(median(cases, na.rm = TRUE))
df1 %>%
filter(weekend == '0', RI_flag == 1)
table(df1$RI_flag)
table(df1$state)
table(df1$RI_flag)
df1 = read.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv')
df1$RI_flag <-- case_when(df1$state == "Rhode Island" ~ "1",
TRUE ~ "0")
df1 = read.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv')
df1$RI_flag <- case_when(df1$state == "Rhode Island" ~ 1,
TRUE ~ 0)
df1$weekday = wday(df1$date)
df1$weekend = case_when(
df1$weekday == '6' | df1$weekday == '7' ~ '1',
TRUE ~ '0'
)
df1 %>%
filter(weekend == '0', RI_flag == 1) %>%
group_by(weekday) %>%
summarise(median(cases, na.rm = TRUE))
df1 %>%
filter(year(date) == "2021", RI_flag == 1, month > 4 & month < 10) %>%
group_by(month) %>%
summarise(median(cases, na.rm = TRUE))
df1 %>%
filter(year(date) == "2021", RI_flag == 1, month > 4 && month < 10) %>%
group_by(month) %>%
summarise(median(cases, na.rm = TRUE))
filter(year(date) == "2021", RI_flag == 1, (month > 4 & month < 10) %>%
df1 %>%
filter(year(date) == "2021", RI_flag == 1, month > 4 & month < 10) %>%
group_by(month) %>%
summarise(median(cases, na.rm = TRUE))
arrange(-weekend)
df %>%
group_by(month, weekend) %>%
summarise(sum(deaths, na.rm = TRUE)) %>%
arrange(-weekend)
str(df)
df %>%
group_by(month, weekend) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(-weekend)
df %>%
filter(weekend == 1)
group_by(state, month, weekend) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(-weekday)
group_by(month, weekend) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(-weekday)
group_by(month, weekend) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(-weekday)
df %>%
filter(weekend == 1)
group_by(month, weekend) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(-weekday)
df$1
df1$weekday
group_by(month) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(-weekday)
df %>%
filter(weekend) %>%
group_by(month) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(-weekday)
df %>%
filter(weekend == "0") %>%
group_by(month) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(-weekday)
df %>%
filter(weekend == "0") %>%
group_by(month) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(weekday)
df$weekday
df %>%
filter(weekend == "0") %>%
group_by(month) %>%
summarise(sum(death, na.rm = TRUE)) %>%
arrange(-weekday)
df %>%
filter(weekend == "0") %>%
group_by(month) %>%
summarise(sum(death, na.rm = TRUE))
df %>%
filter(weekend == "0") %>%
group_by(month) %>%
summarise(total_death = sum(death, na.rm = TRUE))
df %>%
filter(weekend == "0") %>%
group_by(month) %>%
summarise(total_death = sum(death, na.rm = TRUE)) %>%
arrange(-total_death)
df1 %>%
filter(year(date) == "2021", RI_flag == 1, month > 4 & month < 10) %>%
group_by(month) %>%
summarise(median(cases, na.rm = TRUE))
df1$month = month(df1$date)
df1$month
df1 %>%
filter(year(date) == "2021", RI_flag == 1, month > 4 & month < 10) %>%
group_by(month) %>%
summarise(median(cases, na.rm = TRUE))
df1 %>%
filter(year(date) == "2021", RI_flag == 1, month > 4 & month < 10) %>%
group_by(month) %>%
summarise(Average_Cases_RI median(cases, na.rm = TRUE))
df1 %>%
filter(year(date) == "2021", RI_flag == 1, month > 4 & month < 10) %>%
group_by(month) %>%
summarise(Average_Cases_RI = median(cases, na.rm = TRUE))
df3 <- read_csv("C:/Users/student/OneDrive - Bryant University/Desktop/Stats w R/MATH421/Data/titanic_test.csv")
str(df3)
df3$Sex
df3$Gender_flag <- case_when(df3$Sex == "male" ~ 1,
TRUE ~ 0)
#Missing value columns
colSums(is.na(df))
sum(is.na(df))
---
title: "5_missing_value_notes"
sum(is.na(df))
#Missing value columns
colSums(is.na(df))
is.na(df)
```{r, eval=FALSE}
is.na(df)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
sum(is.na(df))
#Missing value columns
colSums(is.na(df))
is.na(df)
```{r, warning=FALSE, message=FALSE}
library(tidyverse)
sum(is.na(df))
view(df)
df=="Unknown"
colSums(df=="Unknown")
colSums(df=="Unknown", na.rm = TRUE)
colSums(df2=="Missing", na.rm = TRUE)
# Way to convert back to "N/A"
df2 <- replace(df, df == 'Unkown' |
df == 'Missing' |
df == 'Not Available', NA)
colSums(df2=="Missing", na.rm = TRUE)
df3 = replace(df, df %in% c("Unknown", "missing", "Not Available"), NA)
df3 = replace(df, df %in% c("Unknown", "missing", "Not Available"), NA)
colSums(df3=="missing", na.rm = TRUE)
colSums(df3=="Missing", na.rm = TRUE)
colSums(df3=="missing", na.rm = TRUE)
# Way to convert back to "N/A"
df2 <- replace(df,df == 'Unkown' |
df == 'missing' |
df == 'Not Available', NA)
df2 <- replace(df,df == 'Unkown' |
df == 'missing' |
df == 'Not Available', NA)
colSums(df2=="missing", na.rm = TRUE)
df2 <- replace(df,df == 'Unkown' |
df == 'Missing' |
df == 'Not Available', NA)
colSums(df2=="Missing", na.rm = TRUE)
df3 = replace(df, df %in% c("Unknown", "missing", "Not Available"), NA)
colSums(df3=="missing", na.rm = TRUE)
#Another way to do convert to N/A
df3 = replace(df, df %in% c("Unknown", "missing", "Not Available"), NA)
colSums(df3=="missing", na.rm = TRUE)
df3 = replace(df, df %in% c("Unknown", "Missing", "Not Available"), NA)
colSums(df3=="Missing", na.rm = TRUE)
df3 = replace(df, df %in% c("Unknown", "Missing", "Not Available"), NA)
colSums(df3=="Missing", na.rm = TRUE)
df3 = replace(df, df %in% c("Unknown", "missing", "Not Available"), NA)
colSums(df3=="Missing", na.rm = TRUE)
colSums(df3=="missing", na.rm = TRUE)
#Another way to do convert to N/A
df3 = replace(df, df %in% c("Unknown", "missing", "Not Available"), NA)
colSums(df3=="missing", na.rm = TRUE)
df3 = replace(df, df %in% c("Unknown", "missing", "Not Available"), NA)
colSums(df3=="Missing", na.rm = TRUE)
colSums(df3=="Missing", na.rm = TRUE)
colSums(df3=="missing", na.rm = TRUE)
colSums(df3=="Missing", na.rm = TRUE)
#Another way to do convert to N/A . . . Supposedly not the same as the previous
df3 = replace(df, df %in% c("Unknown", "Missing", "Not Available"), NA)
colSums(df3=="Missing", na.rm = TRUE)
#Another way to do convert to N/A . . . Supposedly not the same as the previous
df3 = replace(df, df %in% c("Unknown", "missing", "Not Available"), NA)
colSums(df3=="missing", na.rm = TRUE)
#Another way to do convert to N/A . . . Supposedly not the same as the previous
df3 = replace(df, df %in% c("Unknown", "Missing", "Not Available"), NA)
colSums(df3=="Missing", na.rm = TRUE)
colSums(df3=="Missing", na.rm = TRUE)
df3
view(df3)
df3 = replace(df, df %in% c("Unknown", "Missing ", "Not Available"), NA)
colSums(df3=="Missing ", na.rm = TRUE)
colSums(df3=="Missing ", na.rm = TRUE)
colSums(df3=="Missing ", na.rm = TRUE)
colSums(df3=="Missing", na.rm = TRUE)
#Another way to do convert to N/A . . . Supposedly not the same as the previous
df3 = replace(df, df %in% c("Unknown", " Missing", "Not Available"), NA)
colSums(df3==" Missing", na.rm = TRUE)
colSums(df3=="Missing", na.rm = TRUE)
#Another way to do convert to N/A . . . Supposedly not the same as the previous
df3 = replace(df, df %in% c("Unknown", "Missing", "Not Available"), NA)
df3 = replace(df, df %in% c("Unknown", "Missing", "Not Available"), NA)
colSums(df3=="Missing", na.rm = TRUE)
colSums(df3=="Unknown", na.rm = TRUE)
colSums(df3=="Not Available", na.rm = TRUE)
df %>%
filter(weekend == "0") %>%
group_by(month) %>%
summarise(total_death = sum(death, na.rm = TRUE)) %>%
arrange(-total_death)
df %>%
filter(weekend == "0") %>%
group_by(month) %>%
summarise(total_death = sum(death, na.rm = TRUE)) %>%
arrange(-total_death)
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyverse')
library(tidyverse)
library(lubridate)
df = read_csv("C:/Users/student/OneDrive - Bryant University/Desktop/Stats w R/MATH421/Data/all-states-history.csv")
library(lubridate)
df$month = month(df$date)
# day of the week
df$weekday = wday(df$date)
# day of the month
df$monthday <- mday(df$date)
df$daily_death <- case_when(
df$deathIncrease <3 ~ 'low',
df$deathIncrease <=14 ~ 'medium',
TRUE ~ 'high'
)
df$month2 <- case_when(
df$monthday <= 10 ~ 'early_month',
df$monthday <= 20 ~ 'mid_month',
TRUE ~ 'end_month'
)
df$weekend = case_when(
df$weekday == '6' | df$weekday == '7' ~ '1',
TRUE ~ '0'
)
df %>%
select(totalTestsViral)
x <- c(1:10)
x %>% sum
# square root of x
sqrt(x)
x %>% sqrt
sum(sqrt(x))
x %>% sqrt %>% sum
log(sum(sqrt(x)))
x %>% sqrt %>% sum %>% log
# log base 2 of 16
log(16, 2)
16 %>% log(2)
df %>%
group_by(weekday) %>%
summarise(mean(positiveIncrease))
df %>%
group_by(month) %>%
summarise(median(positiveIncrease))
df %>%
group_by(month2) %>%
summarise(mean(positiveIncrease))
df %>%
group_by(weekend) %>%
summarize(median(positiveIncrease))
```
install.packages("tidyverse")
df %>%
filter(weekend == "0") %>%
group_by(month) %>%
summarise(total_death = sum(death, na.rm = TRUE)) %>%
arrange(-total_death)
df3.mutate
df3 <- read_csv("C:/Users/student/OneDrive - Bryant University/Desktop/Stats w R/MATH421/Data/titanic_test.csv")
df3$Gender_flag <- case_when(df3$Sex == "male" ~ 1,
TRUE ~ 0)
df3.mutate
view(df3)
df3.columns
df3.column
col(df3)
str(df3)
df3 %>%
select(Age)
#2 Filter
df3 %>%
filter(Age > 35)
#2 Filter
df3 %>%
filter(Age < 35)
#2 Filter
df3 %>%
filter(Age < 20)
